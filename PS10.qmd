---
title: "PS9 - Linear Regression Model Assessment"
format: pdf
jupyter: python3
---

# Setup

We will be using the `statsmodel` package and `diabetes` dataset for this problem set.

```{python}
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import statsmodels.api as sm
import statsmodels.formula.api as smf

#set options to always display all columns in DataFrame
pd.set_option('display.max_columns', None)

#pd.set_option('display.precision', 2)

pd.set_option('display.float_format', lambda x: '%.3f' % x)

# load diabetes data
diabetes_orig = pd.read_csv('https://www4.stat.ncsu.edu/~boos/var.select/diabetes.tab.txt', sep='\t')

#rename diabetes data columns
diabetes_orig = diabetes_orig.rename(columns=str.lower)

namedict = {'s1': 'totchol', 's2':'ldl', 's3':'hdl', 's4':'tch', 
's5':'ltg', 's6':'glucose', 'y':'target'}

diabetes=diabetes_orig.rename(columns=namedict)

```

# Not all models are created equal

As mentioned in the previous problem set, all models are wrong, but they are not all equally wrong. Some, like Newton's laws of motion, are exceptionally accurate, and only fall apart under extreme conditions (ex. near the speed of light). Others fail regularly, to the point where people question whether they are even useful at all (ex. models of election outcomes). The question is how do we assess the usefulness and accuracy of our model.

In order to do this, we will need a little bit more statistics computation than `scikit-learn` can provide. so we will be fitting our linear model using the `statsmodels` package. Because of this the process of fitting the model will look a little different. There are a number of ways to define linear models using the `statsmodels` package, but we will be using the formula API because it allows us to use our `DataFrame` object directly. When reading the formula the `~` can be translated as "is modeled by". Once we have fit our linear model, we can display the results as well as some metrics of model quality using the function `.summary()` method.

```{python}

fmla = smf.ols(formula='target ~ bmi', data=diabetes) #model formula

model = fmla.fit() #fitting the model

model.summary() #Output model results

```

The results summary output contains a lot of information that we will sort through step by step. In general though, the first table displays information about the model as a whole, the second table displays information about the variables in the model, and the third table displays information about whether our data matches the assumptions of the linear model (which we will discuss in another problem set). 

The first column of the first table contains information about the model fitting process: What the dependent variables was, the type of model that was fit, the number of observations, and the number of degrees of freedom (Df, predictor variables) in our model. 

All of the linear models we are going to fit will be fit using what is called "Least Squares". The least squares method finds parameters that minimize the squared value of the errors (or residuals) in the data (Figure 1). We square the value of the error so that the positive errors and the negative errors don't cancel out.

![Errors/residuals in a linear model](data/plots/Residuals.png)

The second column in the first table gives us information about the results of our model. Basically, is the model useful?

# Is the model better than...

## The mean?
The simplest method of generating predictions about the values of a response variable is to use the mean to predict every value. This is easy and fast, so it is a good baseline to use as a measure of whether our model is useful. The F-Statistic 

## Another model?
We picked BMI to use as a predictor variable in our model. However 

```{python}

fmla_age = smf.ols(formula='target ~ age', data=diabetes) #model formula

model_age= fmla_age.fit() #fitting the model

model_age.summary() #Output model results

```


# Questions
Fit a linear model using the `statsmodel` package to answer the following questions.
1. What is the number of observations in your model. 
2. What is the number of degrees of freedom in your model?
3. Write out the equation for your linear model using the coefficients you have calculated.
4. Is the model you fit better than the mean at predicting your response variable?
5.  