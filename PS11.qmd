---
title: "PS11 - Probability"
format: pdf
jupyter: python3
---

# Introduction

Please watch [Probability Part 1](https://youtu.be/OyddY7DlV58?si=fZFJNF5doZ_4mDTV) 
and [Probability Part 2](https://youtu.be/oZCskBpHWyk?si=lCFQbjzEHPfgg-Z1)
before completing this problem set.

## Setup

For this problem set we will need the numpy package, and also specifically the
random module from the numpy package (numpy.random), which we used previously in
PS7. To generate random numbers using numpy.random we will need to create a 
random number generator object using the `default_rng` function. We will use the 
seed value of 281 so that others can replicate these results if they want.

```{python}

import numpy as np
import numpy.random as rand


rng = rand.default_rng(seed=281)

```

# Theoretical vs. Empirical Probability
If we have a discrete probability distribution, (ex. rolling a die), it is very 
easy to calculate the expected value ($E(X)$, theoretical mean) of the 
distribution. We simply multiple each value in the distribution with the 
probability that that value will appear. You can see the mathematical notation 
for that concept below. 

$$
E(X) = \Sigma (X \cdot P(X))
$$

If we have an unfair 6-sided die, where you are 3 times as likely to roll a 5 or a 6 as any other value we can calculate the expected value using our formula from before.

$$
E(X) = (1\cdot 0.1)+(2\cdot 0.1)+(3\cdot 0.1)+(4\cdot 0.1)+(5\cdot 0.3)+(6\cdot 0.3) 
$$

To do the calculation in python we can use `numpy` to vectorize the
multiplication instead of having to loop through a list in base python.

```{python}

x = np.arange(1, 7) # values of our probability distribution [X]
p = np.array([0.1, 0.1, 0.1, 0.1, 0.3, 0.3]) #probabilities of each value [P(X)]

xp = np.multiply(x, p) #multiply X by P(X)
sum(xp) #sum X*P(X)

```



# Questions

1. Theoretical vs. Empirical Probability
   1. Create a discrete probability distribution ($X$) and plot it. It should have at least 5 possible values and the likelihood of each value should not be the same. Also remember, the sum total of the probabilities must be 1.
   2. Calculate the expected value ($E(X)$) of your probability distribution.
   3. Simulate your probability distribution using python and calculate the empirical mean for each run. 